{"version":3,"sources":["webpack:///./node_modules/@vue/devtools-api/lib/esm/const.js","webpack:///./node_modules/@vue/devtools-api/lib/esm/proxy.js","webpack:///./node_modules/@vue/devtools-api/lib/esm/index.js","webpack:///./node_modules/@vue/devtools-api/lib/esm/time.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/devtools-api/lib/esm/env.js"],"names":["HOOK_SETUP","HOOK_PLUGIN_SETTINGS_SET","plugin","hook","this","target","targetQueue","onQueue","defaultSettings","settings","id","item","defaultValue","localSettingsSaveId","currentSettings","Object","assign","raw","localStorage","getItem","data","JSON","parse","e","fallbacks","value","setItem","stringify","on","pluginId","setSettings","proxiedOn","Proxy","get","_target","prop","args","push","method","proxiedTarget","keys","includes","resolve","Promise","setupDevtoolsPlugin","pluginDescriptor","setupFn","descriptor","enableProxy","enableEarlyProxy","__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__","proxy","list","__VUE_DEVTOOLS_PLUGINS__","emit","supported","perf","isPerformanceSupported","_a","undefined","window","performance","global","perf_hooks","now","Date","activeEffectScope","EffectScope","detached","_active","effects","cleanups","parent","index","scopes","fn","currentEffectScope","fromParent","i","l","length","stop","last","pop","effectScope","recordEffectScope","effect","scope","active","getCurrentScope","createDep","dep","Set","w","n","wasTracked","trackOpBit","newTracked","initDepMarkers","deps","finalizeDepMarkers","ptr","delete","targetMap","WeakMap","effectTrackDepth","maxMarkerBits","activeEffect","ITERATE_KEY","Symbol","MAP_KEY_ITERATE_KEY","ReactiveEffect","scheduler","lastShouldTrack","shouldTrack","cleanupEffect","deferStop","onStop","effect2","trackStack","pauseTracking","resetTracking","track","type","key","depsMap","set","Map","eventInfo","trackEffects","debuggerEventExtraInfo","shouldTrack2","has","add","trigger","newValue","oldValue","oldTarget","values","newLength","Number","forEach","key2","triggerEffects","computed","triggerEffect","allowRecurse","run","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","filter","map","arrayInstrumentations","createArrayInstrumentations","instrumentations","arr","toRaw","res","apply","hasOwnProperty","obj","BaseReactiveHandler","_isReadonly","_shallow","receiver","isReadonly2","shallow","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","readonly","reactive","MutableReactiveHandler","super","isReadonly","isShallow","hadKey","result","deleteProperty","ownKeys","ReadonlyReactiveHandler","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toShallow","getProto","v","getPrototypeOf","rawTarget","rawKey","has2","wrap","toReadonly","toReactive","call","size","proto","get2","deleteEntry","clear","hadItems","createForEach","callback","thisArg","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","next","createReadonlyMethod","createInstrumentations","mutableInstrumentations2","shallowInstrumentations2","readonlyInstrumentations2","shallowReadonlyInstrumentations2","iteratorMethods","mutableInstrumentations","readonlyInstrumentations","shallowInstrumentations","shallowReadonlyInstrumentations","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","isReactive","isProxy","markRaw","trackRefValue","ref2","triggerRefValue","newVal","r","__v_isRef","ref","createRef","shallowRef","rawValue","RefImpl","__v_isShallow","_rawValue","_value","useDirectValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ComputedRefImpl","getter","_setter","isSSR","_dirty","_cacheable","self","getterOrOptions","debugOptions","setter","onlyGetter","cRef","getDevtoolsGlobalHook","getTarget","__VUE_DEVTOOLS_GLOBAL_HOOK__","navigator","isProxyAvailable"],"mappings":"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","file":"js/chunk-vendors~6b4a2b08.5808226a.js","sourcesContent":["export const HOOK_SETUP = 'devtools-plugin:setup';\nexport const HOOK_PLUGIN_SETTINGS_SET = 'plugin:settings:set';\n","import { HOOK_PLUGIN_SETTINGS_SET } from './const.js';\nimport { now } from './time.js';\nexport class ApiProxy {\n    constructor(plugin, hook) {\n        this.target = null;\n        this.targetQueue = [];\n        this.onQueue = [];\n        this.plugin = plugin;\n        this.hook = hook;\n        const defaultSettings = {};\n        if (plugin.settings) {\n            for (const id in plugin.settings) {\n                const item = plugin.settings[id];\n                defaultSettings[id] = item.defaultValue;\n            }\n        }\n        const localSettingsSaveId = `__vue-devtools-plugin-settings__${plugin.id}`;\n        let currentSettings = Object.assign({}, defaultSettings);\n        try {\n            const raw = localStorage.getItem(localSettingsSaveId);\n            const data = JSON.parse(raw);\n            Object.assign(currentSettings, data);\n        }\n        catch (e) {\n            // noop\n        }\n        this.fallbacks = {\n            getSettings() {\n                return currentSettings;\n            },\n            setSettings(value) {\n                try {\n                    localStorage.setItem(localSettingsSaveId, JSON.stringify(value));\n                }\n                catch (e) {\n                    // noop\n                }\n                currentSettings = value;\n            },\n            now() {\n                return now();\n            },\n        };\n        if (hook) {\n            hook.on(HOOK_PLUGIN_SETTINGS_SET, (pluginId, value) => {\n                if (pluginId === this.plugin.id) {\n                    this.fallbacks.setSettings(value);\n                }\n            });\n        }\n        this.proxiedOn = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target.on[prop];\n                }\n                else {\n                    return (...args) => {\n                        this.onQueue.push({\n                            method: prop,\n                            args,\n                        });\n                    };\n                }\n            },\n        });\n        this.proxiedTarget = new Proxy({}, {\n            get: (_target, prop) => {\n                if (this.target) {\n                    return this.target[prop];\n                }\n                else if (prop === 'on') {\n                    return this.proxiedOn;\n                }\n                else if (Object.keys(this.fallbacks).includes(prop)) {\n                    return (...args) => {\n                        this.targetQueue.push({\n                            method: prop,\n                            args,\n                            resolve: () => { },\n                        });\n                        return this.fallbacks[prop](...args);\n                    };\n                }\n                else {\n                    return (...args) => {\n                        return new Promise(resolve => {\n                            this.targetQueue.push({\n                                method: prop,\n                                args,\n                                resolve,\n                            });\n                        });\n                    };\n                }\n            },\n        });\n    }\n    async setRealTarget(target) {\n        this.target = target;\n        for (const item of this.onQueue) {\n            this.target.on[item.method](...item.args);\n        }\n        for (const item of this.targetQueue) {\n            item.resolve(await this.target[item.method](...item.args));\n        }\n    }\n}\n","import { getTarget, getDevtoolsGlobalHook, isProxyAvailable } from './env.js';\nimport { HOOK_SETUP } from './const.js';\nimport { ApiProxy } from './proxy.js';\nexport * from './api/index.js';\nexport * from './plugin.js';\nexport * from './time.js';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const descriptor = pluginDescriptor;\n    const target = getTarget();\n    const hook = getDevtoolsGlobalHook();\n    const enableProxy = isProxyAvailable && descriptor.enableEarlyProxy;\n    if (hook && (target.__VUE_DEVTOOLS_PLUGIN_API_AVAILABLE__ || !enableProxy)) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const proxy = enableProxy ? new ApiProxy(descriptor, hook) : null;\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor: descriptor,\n            setupFn,\n            proxy,\n        });\n        if (proxy)\n            setupFn(proxy.proxiedTarget);\n    }\n}\n","let supported;\nlet perf;\nexport function isPerformanceSupported() {\n    var _a;\n    if (supported !== undefined) {\n        return supported;\n    }\n    if (typeof window !== 'undefined' && window.performance) {\n        supported = true;\n        perf = window.performance;\n    }\n    else if (typeof global !== 'undefined' && ((_a = global.perf_hooks) === null || _a === void 0 ? void 0 : _a.performance)) {\n        supported = true;\n        perf = global.perf_hooks.performance;\n    }\n    else {\n        supported = false;\n    }\n    return supported;\n}\nexport function now() {\n    return isPerformanceSupported() ? perf.now() : Date.now();\n}\n","import { extend, isArray, isSymbol, isMap, isIntegerKey, hasOwn, hasChanged, isObject, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nfunction warn(msg, ...args) {\n  console.warn(`[Vue warn] ${msg}`, ...args);\n}\n\nlet activeEffectScope;\nclass EffectScope {\n  constructor(detached = false) {\n    this.detached = detached;\n    /**\n     * @internal\n     */\n    this._active = true;\n    /**\n     * @internal\n     */\n    this.effects = [];\n    /**\n     * @internal\n     */\n    this.cleanups = [];\n    this.parent = activeEffectScope;\n    if (!detached && activeEffectScope) {\n      this.index = (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(\n        this\n      ) - 1;\n    }\n  }\n  get active() {\n    return this._active;\n  }\n  run(fn) {\n    if (this._active) {\n      const currentEffectScope = activeEffectScope;\n      try {\n        activeEffectScope = this;\n        return fn();\n      } finally {\n        activeEffectScope = currentEffectScope;\n      }\n    } else if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(`cannot run an inactive effect scope.`);\n    }\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  on() {\n    activeEffectScope = this;\n  }\n  /**\n   * This should only be called on non-detached scopes\n   * @internal\n   */\n  off() {\n    activeEffectScope = this.parent;\n  }\n  stop(fromParent) {\n    if (this._active) {\n      let i, l;\n      for (i = 0, l = this.effects.length; i < l; i++) {\n        this.effects[i].stop();\n      }\n      for (i = 0, l = this.cleanups.length; i < l; i++) {\n        this.cleanups[i]();\n      }\n      if (this.scopes) {\n        for (i = 0, l = this.scopes.length; i < l; i++) {\n          this.scopes[i].stop(true);\n        }\n      }\n      if (!this.detached && this.parent && !fromParent) {\n        const last = this.parent.scopes.pop();\n        if (last && last !== this) {\n          this.parent.scopes[this.index] = last;\n          last.index = this.index;\n        }\n      }\n      this.parent = void 0;\n      this._active = false;\n    }\n  }\n}\nfunction effectScope(detached) {\n  return new EffectScope(detached);\n}\nfunction recordEffectScope(effect, scope = activeEffectScope) {\n  if (scope && scope.active) {\n    scope.effects.push(effect);\n  }\n}\nfunction getCurrentScope() {\n  return activeEffectScope;\n}\nfunction onScopeDispose(fn) {\n  if (activeEffectScope) {\n    activeEffectScope.cleanups.push(fn);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    warn(\n      `onScopeDispose() is called when there is no active effect scope to be associated with.`\n    );\n  }\n}\n\nconst createDep = (effects) => {\n  const dep = new Set(effects);\n  dep.w = 0;\n  dep.n = 0;\n  return dep;\n};\nconst wasTracked = (dep) => (dep.w & trackOpBit) > 0;\nconst newTracked = (dep) => (dep.n & trackOpBit) > 0;\nconst initDepMarkers = ({ deps }) => {\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].w |= trackOpBit;\n    }\n  }\n};\nconst finalizeDepMarkers = (effect) => {\n  const { deps } = effect;\n  if (deps.length) {\n    let ptr = 0;\n    for (let i = 0; i < deps.length; i++) {\n      const dep = deps[i];\n      if (wasTracked(dep) && !newTracked(dep)) {\n        dep.delete(effect);\n      } else {\n        deps[ptr++] = dep;\n      }\n      dep.w &= ~trackOpBit;\n      dep.n &= ~trackOpBit;\n    }\n    deps.length = ptr;\n  }\n};\n\nconst targetMap = /* @__PURE__ */ new WeakMap();\nlet effectTrackDepth = 0;\nlet trackOpBit = 1;\nconst maxMarkerBits = 30;\nlet activeEffect;\nconst ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"iterate\" : \"\");\nconst MAP_KEY_ITERATE_KEY = Symbol(!!(process.env.NODE_ENV !== \"production\") ? \"Map key iterate\" : \"\");\nclass ReactiveEffect {\n  constructor(fn, scheduler = null, scope) {\n    this.fn = fn;\n    this.scheduler = scheduler;\n    this.active = true;\n    this.deps = [];\n    this.parent = void 0;\n    recordEffectScope(this, scope);\n  }\n  run() {\n    if (!this.active) {\n      return this.fn();\n    }\n    let parent = activeEffect;\n    let lastShouldTrack = shouldTrack;\n    while (parent) {\n      if (parent === this) {\n        return;\n      }\n      parent = parent.parent;\n    }\n    try {\n      this.parent = activeEffect;\n      activeEffect = this;\n      shouldTrack = true;\n      trackOpBit = 1 << ++effectTrackDepth;\n      if (effectTrackDepth <= maxMarkerBits) {\n        initDepMarkers(this);\n      } else {\n        cleanupEffect(this);\n      }\n      return this.fn();\n    } finally {\n      if (effectTrackDepth <= maxMarkerBits) {\n        finalizeDepMarkers(this);\n      }\n      trackOpBit = 1 << --effectTrackDepth;\n      activeEffect = this.parent;\n      shouldTrack = lastShouldTrack;\n      this.parent = void 0;\n      if (this.deferStop) {\n        this.stop();\n      }\n    }\n  }\n  stop() {\n    if (activeEffect === this) {\n      this.deferStop = true;\n    } else if (this.active) {\n      cleanupEffect(this);\n      if (this.onStop) {\n        this.onStop();\n      }\n      this.active = false;\n    }\n  }\n}\nfunction cleanupEffect(effect2) {\n  const { deps } = effect2;\n  if (deps.length) {\n    for (let i = 0; i < deps.length; i++) {\n      deps[i].delete(effect2);\n    }\n    deps.length = 0;\n  }\n}\nfunction effect(fn, options) {\n  if (fn.effect instanceof ReactiveEffect) {\n    fn = fn.effect.fn;\n  }\n  const _effect = new ReactiveEffect(fn);\n  if (options) {\n    extend(_effect, options);\n    if (options.scope)\n      recordEffectScope(_effect, options.scope);\n  }\n  if (!options || !options.lazy) {\n    _effect.run();\n  }\n  const runner = _effect.run.bind(_effect);\n  runner.effect = _effect;\n  return runner;\n}\nfunction stop(runner) {\n  runner.effect.stop();\n}\nlet shouldTrack = true;\nconst trackStack = [];\nfunction pauseTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = false;\n}\nfunction enableTracking() {\n  trackStack.push(shouldTrack);\n  shouldTrack = true;\n}\nfunction resetTracking() {\n  const last = trackStack.pop();\n  shouldTrack = last === void 0 ? true : last;\n}\nfunction track(target, type, key) {\n  if (shouldTrack && activeEffect) {\n    let depsMap = targetMap.get(target);\n    if (!depsMap) {\n      targetMap.set(target, depsMap = /* @__PURE__ */ new Map());\n    }\n    let dep = depsMap.get(key);\n    if (!dep) {\n      depsMap.set(key, dep = createDep());\n    }\n    const eventInfo = !!(process.env.NODE_ENV !== \"production\") ? { effect: activeEffect, target, type, key } : void 0;\n    trackEffects(dep, eventInfo);\n  }\n}\nfunction trackEffects(dep, debuggerEventExtraInfo) {\n  let shouldTrack2 = false;\n  if (effectTrackDepth <= maxMarkerBits) {\n    if (!newTracked(dep)) {\n      dep.n |= trackOpBit;\n      shouldTrack2 = !wasTracked(dep);\n    }\n  } else {\n    shouldTrack2 = !dep.has(activeEffect);\n  }\n  if (shouldTrack2) {\n    dep.add(activeEffect);\n    activeEffect.deps.push(dep);\n    if (!!(process.env.NODE_ENV !== \"production\") && activeEffect.onTrack) {\n      activeEffect.onTrack(\n        extend(\n          {\n            effect: activeEffect\n          },\n          debuggerEventExtraInfo\n        )\n      );\n    }\n  }\n}\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\n  const depsMap = targetMap.get(target);\n  if (!depsMap) {\n    return;\n  }\n  let deps = [];\n  if (type === \"clear\") {\n    deps = [...depsMap.values()];\n  } else if (key === \"length\" && isArray(target)) {\n    const newLength = Number(newValue);\n    depsMap.forEach((dep, key2) => {\n      if (key2 === \"length\" || !isSymbol(key2) && key2 >= newLength) {\n        deps.push(dep);\n      }\n    });\n  } else {\n    if (key !== void 0) {\n      deps.push(depsMap.get(key));\n    }\n    switch (type) {\n      case \"add\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        } else if (isIntegerKey(key)) {\n          deps.push(depsMap.get(\"length\"));\n        }\n        break;\n      case \"delete\":\n        if (!isArray(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n          if (isMap(target)) {\n            deps.push(depsMap.get(MAP_KEY_ITERATE_KEY));\n          }\n        }\n        break;\n      case \"set\":\n        if (isMap(target)) {\n          deps.push(depsMap.get(ITERATE_KEY));\n        }\n        break;\n    }\n  }\n  const eventInfo = !!(process.env.NODE_ENV !== \"production\") ? { target, type, key, newValue, oldValue, oldTarget } : void 0;\n  if (deps.length === 1) {\n    if (deps[0]) {\n      if (!!(process.env.NODE_ENV !== \"production\")) {\n        triggerEffects(deps[0], eventInfo);\n      } else {\n        triggerEffects(deps[0]);\n      }\n    }\n  } else {\n    const effects = [];\n    for (const dep of deps) {\n      if (dep) {\n        effects.push(...dep);\n      }\n    }\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      triggerEffects(createDep(effects), eventInfo);\n    } else {\n      triggerEffects(createDep(effects));\n    }\n  }\n}\nfunction triggerEffects(dep, debuggerEventExtraInfo) {\n  const effects = isArray(dep) ? dep : [...dep];\n  for (const effect2 of effects) {\n    if (effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n  for (const effect2 of effects) {\n    if (!effect2.computed) {\n      triggerEffect(effect2, debuggerEventExtraInfo);\n    }\n  }\n}\nfunction triggerEffect(effect2, debuggerEventExtraInfo) {\n  if (effect2 !== activeEffect || effect2.allowRecurse) {\n    if (!!(process.env.NODE_ENV !== \"production\") && effect2.onTrigger) {\n      effect2.onTrigger(extend({ effect: effect2 }, debuggerEventExtraInfo));\n    }\n    if (effect2.scheduler) {\n      effect2.scheduler();\n    } else {\n      effect2.run();\n    }\n  }\n}\nfunction getDepFromReactive(object, key) {\n  var _a;\n  return (_a = targetMap.get(object)) == null ? void 0 : _a.get(key);\n}\n\nconst isNonTrackableKeys = /* @__PURE__ */ makeMap(`__proto__,__v_isRef,__isVue`);\nconst builtInSymbols = new Set(\n  /* @__PURE__ */ Object.getOwnPropertyNames(Symbol).filter((key) => key !== \"arguments\" && key !== \"caller\").map((key) => Symbol[key]).filter(isSymbol)\n);\nconst arrayInstrumentations = /* @__PURE__ */ createArrayInstrumentations();\nfunction createArrayInstrumentations() {\n  const instrumentations = {};\n  [\"includes\", \"indexOf\", \"lastIndexOf\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      const arr = toRaw(this);\n      for (let i = 0, l = this.length; i < l; i++) {\n        track(arr, \"get\", i + \"\");\n      }\n      const res = arr[key](...args);\n      if (res === -1 || res === false) {\n        return arr[key](...args.map(toRaw));\n      } else {\n        return res;\n      }\n    };\n  });\n  [\"push\", \"pop\", \"shift\", \"unshift\", \"splice\"].forEach((key) => {\n    instrumentations[key] = function(...args) {\n      pauseTracking();\n      const res = toRaw(this)[key].apply(this, args);\n      resetTracking();\n      return res;\n    };\n  });\n  return instrumentations;\n}\nfunction hasOwnProperty(key) {\n  const obj = toRaw(this);\n  track(obj, \"has\", key);\n  return obj.hasOwnProperty(key);\n}\nclass BaseReactiveHandler {\n  constructor(_isReadonly = false, _shallow = false) {\n    this._isReadonly = _isReadonly;\n    this._shallow = _shallow;\n  }\n  get(target, key, receiver) {\n    const isReadonly2 = this._isReadonly, shallow = this._shallow;\n    if (key === \"__v_isReactive\") {\n      return !isReadonly2;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly2;\n    } else if (key === \"__v_isShallow\") {\n      return shallow;\n    } else if (key === \"__v_raw\" && receiver === (isReadonly2 ? shallow ? shallowReadonlyMap : readonlyMap : shallow ? shallowReactiveMap : reactiveMap).get(target)) {\n      return target;\n    }\n    const targetIsArray = isArray(target);\n    if (!isReadonly2) {\n      if (targetIsArray && hasOwn(arrayInstrumentations, key)) {\n        return Reflect.get(arrayInstrumentations, key, receiver);\n      }\n      if (key === \"hasOwnProperty\") {\n        return hasOwnProperty;\n      }\n    }\n    const res = Reflect.get(target, key, receiver);\n    if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\n      return res;\n    }\n    if (!isReadonly2) {\n      track(target, \"get\", key);\n    }\n    if (shallow) {\n      return res;\n    }\n    if (isRef(res)) {\n      return targetIsArray && isIntegerKey(key) ? res : res.value;\n    }\n    if (isObject(res)) {\n      return isReadonly2 ? readonly(res) : reactive(res);\n    }\n    return res;\n  }\n}\nclass MutableReactiveHandler extends BaseReactiveHandler {\n  constructor(shallow = false) {\n    super(false, shallow);\n  }\n  set(target, key, value, receiver) {\n    let oldValue = target[key];\n    if (isReadonly(oldValue) && isRef(oldValue) && !isRef(value)) {\n      return false;\n    }\n    if (!this._shallow) {\n      if (!isShallow(value) && !isReadonly(value)) {\n        oldValue = toRaw(oldValue);\n        value = toRaw(value);\n      }\n      if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\n        oldValue.value = value;\n        return true;\n      }\n    }\n    const hadKey = isArray(target) && isIntegerKey(key) ? Number(key) < target.length : hasOwn(target, key);\n    const result = Reflect.set(target, key, value, receiver);\n    if (target === toRaw(receiver)) {\n      if (!hadKey) {\n        trigger(target, \"add\", key, value);\n      } else if (hasChanged(value, oldValue)) {\n        trigger(target, \"set\", key, value, oldValue);\n      }\n    }\n    return result;\n  }\n  deleteProperty(target, key) {\n    const hadKey = hasOwn(target, key);\n    const oldValue = target[key];\n    const result = Reflect.deleteProperty(target, key);\n    if (result && hadKey) {\n      trigger(target, \"delete\", key, void 0, oldValue);\n    }\n    return result;\n  }\n  has(target, key) {\n    const result = Reflect.has(target, key);\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\n      track(target, \"has\", key);\n    }\n    return result;\n  }\n  ownKeys(target) {\n    track(\n      target,\n      \"iterate\",\n      isArray(target) ? \"length\" : ITERATE_KEY\n    );\n    return Reflect.ownKeys(target);\n  }\n}\nclass ReadonlyReactiveHandler extends BaseReactiveHandler {\n  constructor(shallow = false) {\n    super(true, shallow);\n  }\n  set(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Set operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n  deleteProperty(target, key) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      warn(\n        `Delete operation on key \"${String(key)}\" failed: target is readonly.`,\n        target\n      );\n    }\n    return true;\n  }\n}\nconst mutableHandlers = /* @__PURE__ */ new MutableReactiveHandler();\nconst readonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler();\nconst shallowReactiveHandlers = /* @__PURE__ */ new MutableReactiveHandler(\n  true\n);\nconst shallowReadonlyHandlers = /* @__PURE__ */ new ReadonlyReactiveHandler(true);\n\nconst toShallow = (value) => value;\nconst getProto = (v) => Reflect.getPrototypeOf(v);\nfunction get(target, key, isReadonly = false, isShallow = false) {\n  target = target[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (hasChanged(key, rawKey)) {\n      track(rawTarget, \"get\", key);\n    }\n    track(rawTarget, \"get\", rawKey);\n  }\n  const { has: has2 } = getProto(rawTarget);\n  const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n  if (has2.call(rawTarget, key)) {\n    return wrap(target.get(key));\n  } else if (has2.call(rawTarget, rawKey)) {\n    return wrap(target.get(rawKey));\n  } else if (target !== rawTarget) {\n    target.get(key);\n  }\n}\nfunction has(key, isReadonly = false) {\n  const target = this[\"__v_raw\"];\n  const rawTarget = toRaw(target);\n  const rawKey = toRaw(key);\n  if (!isReadonly) {\n    if (hasChanged(key, rawKey)) {\n      track(rawTarget, \"has\", key);\n    }\n    track(rawTarget, \"has\", rawKey);\n  }\n  return key === rawKey ? target.has(key) : target.has(key) || target.has(rawKey);\n}\nfunction size(target, isReadonly = false) {\n  target = target[\"__v_raw\"];\n  !isReadonly && track(toRaw(target), \"iterate\", ITERATE_KEY);\n  return Reflect.get(target, \"size\", target);\n}\nfunction add(value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const proto = getProto(target);\n  const hadKey = proto.has.call(target, value);\n  if (!hadKey) {\n    target.add(value);\n    trigger(target, \"add\", value, value);\n  }\n  return this;\n}\nfunction set(key, value) {\n  value = toRaw(value);\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2.call(target, key);\n  target.set(key, value);\n  if (!hadKey) {\n    trigger(target, \"add\", key, value);\n  } else if (hasChanged(value, oldValue)) {\n    trigger(target, \"set\", key, value, oldValue);\n  }\n  return this;\n}\nfunction deleteEntry(key) {\n  const target = toRaw(this);\n  const { has: has2, get: get2 } = getProto(target);\n  let hadKey = has2.call(target, key);\n  if (!hadKey) {\n    key = toRaw(key);\n    hadKey = has2.call(target, key);\n  } else if (!!(process.env.NODE_ENV !== \"production\")) {\n    checkIdentityKeys(target, has2, key);\n  }\n  const oldValue = get2 ? get2.call(target, key) : void 0;\n  const result = target.delete(key);\n  if (hadKey) {\n    trigger(target, \"delete\", key, void 0, oldValue);\n  }\n  return result;\n}\nfunction clear() {\n  const target = toRaw(this);\n  const hadItems = target.size !== 0;\n  const oldTarget = !!(process.env.NODE_ENV !== \"production\") ? isMap(target) ? new Map(target) : new Set(target) : void 0;\n  const result = target.clear();\n  if (hadItems) {\n    trigger(target, \"clear\", void 0, void 0, oldTarget);\n  }\n  return result;\n}\nfunction createForEach(isReadonly, isShallow) {\n  return function forEach(callback, thisArg) {\n    const observed = this;\n    const target = observed[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(rawTarget, \"iterate\", ITERATE_KEY);\n    return target.forEach((value, key) => {\n      return callback.call(thisArg, wrap(value), wrap(key), observed);\n    });\n  };\n}\nfunction createIterableMethod(method, isReadonly, isShallow) {\n  return function(...args) {\n    const target = this[\"__v_raw\"];\n    const rawTarget = toRaw(target);\n    const targetIsMap = isMap(rawTarget);\n    const isPair = method === \"entries\" || method === Symbol.iterator && targetIsMap;\n    const isKeyOnly = method === \"keys\" && targetIsMap;\n    const innerIterator = target[method](...args);\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\n    !isReadonly && track(\n      rawTarget,\n      \"iterate\",\n      isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY\n    );\n    return {\n      // iterator protocol\n      next() {\n        const { value, done } = innerIterator.next();\n        return done ? { value, done } : {\n          value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\n          done\n        };\n      },\n      // iterable protocol\n      [Symbol.iterator]() {\n        return this;\n      }\n    };\n  };\n}\nfunction createReadonlyMethod(type) {\n  return function(...args) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      const key = args[0] ? `on key \"${args[0]}\" ` : ``;\n      console.warn(\n        `${capitalize(type)} operation ${key}failed: target is readonly.`,\n        toRaw(this)\n      );\n    }\n    return type === \"delete\" ? false : this;\n  };\n}\nfunction createInstrumentations() {\n  const mutableInstrumentations2 = {\n    get(key) {\n      return get(this, key);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, false)\n  };\n  const shallowInstrumentations2 = {\n    get(key) {\n      return get(this, key, false, true);\n    },\n    get size() {\n      return size(this);\n    },\n    has,\n    add,\n    set,\n    delete: deleteEntry,\n    clear,\n    forEach: createForEach(false, true)\n  };\n  const readonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, false)\n  };\n  const shallowReadonlyInstrumentations2 = {\n    get(key) {\n      return get(this, key, true, true);\n    },\n    get size() {\n      return size(this, true);\n    },\n    has(key) {\n      return has.call(this, key, true);\n    },\n    add: createReadonlyMethod(\"add\"),\n    set: createReadonlyMethod(\"set\"),\n    delete: createReadonlyMethod(\"delete\"),\n    clear: createReadonlyMethod(\"clear\"),\n    forEach: createForEach(true, true)\n  };\n  const iteratorMethods = [\"keys\", \"values\", \"entries\", Symbol.iterator];\n  iteratorMethods.forEach((method) => {\n    mutableInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      false\n    );\n    readonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      false\n    );\n    shallowInstrumentations2[method] = createIterableMethod(\n      method,\n      false,\n      true\n    );\n    shallowReadonlyInstrumentations2[method] = createIterableMethod(\n      method,\n      true,\n      true\n    );\n  });\n  return [\n    mutableInstrumentations2,\n    readonlyInstrumentations2,\n    shallowInstrumentations2,\n    shallowReadonlyInstrumentations2\n  ];\n}\nconst [\n  mutableInstrumentations,\n  readonlyInstrumentations,\n  shallowInstrumentations,\n  shallowReadonlyInstrumentations\n] = /* @__PURE__ */ createInstrumentations();\nfunction createInstrumentationGetter(isReadonly, shallow) {\n  const instrumentations = shallow ? isReadonly ? shallowReadonlyInstrumentations : shallowInstrumentations : isReadonly ? readonlyInstrumentations : mutableInstrumentations;\n  return (target, key, receiver) => {\n    if (key === \"__v_isReactive\") {\n      return !isReadonly;\n    } else if (key === \"__v_isReadonly\") {\n      return isReadonly;\n    } else if (key === \"__v_raw\") {\n      return target;\n    }\n    return Reflect.get(\n      hasOwn(instrumentations, key) && key in target ? instrumentations : target,\n      key,\n      receiver\n    );\n  };\n}\nconst mutableCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, false)\n};\nconst shallowCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(false, true)\n};\nconst readonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, false)\n};\nconst shallowReadonlyCollectionHandlers = {\n  get: /* @__PURE__ */ createInstrumentationGetter(true, true)\n};\nfunction checkIdentityKeys(target, has2, key) {\n  const rawKey = toRaw(key);\n  if (rawKey !== key && has2.call(target, rawKey)) {\n    const type = toRawType(target);\n    console.warn(\n      `Reactive ${type} contains both the raw and reactive versions of the same object${type === `Map` ? ` as keys` : ``}, which can lead to inconsistencies. Avoid differentiating between the raw and reactive versions of an object and only use the reactive version if possible.`\n    );\n  }\n}\n\nconst reactiveMap = /* @__PURE__ */ new WeakMap();\nconst shallowReactiveMap = /* @__PURE__ */ new WeakMap();\nconst readonlyMap = /* @__PURE__ */ new WeakMap();\nconst shallowReadonlyMap = /* @__PURE__ */ new WeakMap();\nfunction targetTypeMap(rawType) {\n  switch (rawType) {\n    case \"Object\":\n    case \"Array\":\n      return 1 /* COMMON */;\n    case \"Map\":\n    case \"Set\":\n    case \"WeakMap\":\n    case \"WeakSet\":\n      return 2 /* COLLECTION */;\n    default:\n      return 0 /* INVALID */;\n  }\n}\nfunction getTargetType(value) {\n  return value[\"__v_skip\"] || !Object.isExtensible(value) ? 0 /* INVALID */ : targetTypeMap(toRawType(value));\n}\nfunction reactive(target) {\n  if (isReadonly(target)) {\n    return target;\n  }\n  return createReactiveObject(\n    target,\n    false,\n    mutableHandlers,\n    mutableCollectionHandlers,\n    reactiveMap\n  );\n}\nfunction shallowReactive(target) {\n  return createReactiveObject(\n    target,\n    false,\n    shallowReactiveHandlers,\n    shallowCollectionHandlers,\n    shallowReactiveMap\n  );\n}\nfunction readonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    readonlyHandlers,\n    readonlyCollectionHandlers,\n    readonlyMap\n  );\n}\nfunction shallowReadonly(target) {\n  return createReactiveObject(\n    target,\n    true,\n    shallowReadonlyHandlers,\n    shallowReadonlyCollectionHandlers,\n    shallowReadonlyMap\n  );\n}\nfunction createReactiveObject(target, isReadonly2, baseHandlers, collectionHandlers, proxyMap) {\n  if (!isObject(target)) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      console.warn(`value cannot be made reactive: ${String(target)}`);\n    }\n    return target;\n  }\n  if (target[\"__v_raw\"] && !(isReadonly2 && target[\"__v_isReactive\"])) {\n    return target;\n  }\n  const existingProxy = proxyMap.get(target);\n  if (existingProxy) {\n    return existingProxy;\n  }\n  const targetType = getTargetType(target);\n  if (targetType === 0 /* INVALID */) {\n    return target;\n  }\n  const proxy = new Proxy(\n    target,\n    targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers\n  );\n  proxyMap.set(target, proxy);\n  return proxy;\n}\nfunction isReactive(value) {\n  if (isReadonly(value)) {\n    return isReactive(value[\"__v_raw\"]);\n  }\n  return !!(value && value[\"__v_isReactive\"]);\n}\nfunction isReadonly(value) {\n  return !!(value && value[\"__v_isReadonly\"]);\n}\nfunction isShallow(value) {\n  return !!(value && value[\"__v_isShallow\"]);\n}\nfunction isProxy(value) {\n  return isReactive(value) || isReadonly(value);\n}\nfunction toRaw(observed) {\n  const raw = observed && observed[\"__v_raw\"];\n  return raw ? toRaw(raw) : observed;\n}\nfunction markRaw(value) {\n  def(value, \"__v_skip\", true);\n  return value;\n}\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\n\nfunction trackRefValue(ref2) {\n  if (shouldTrack && activeEffect) {\n    ref2 = toRaw(ref2);\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      trackEffects(ref2.dep || (ref2.dep = createDep()), {\n        target: ref2,\n        type: \"get\",\n        key: \"value\"\n      });\n    } else {\n      trackEffects(ref2.dep || (ref2.dep = createDep()));\n    }\n  }\n}\nfunction triggerRefValue(ref2, newVal) {\n  ref2 = toRaw(ref2);\n  const dep = ref2.dep;\n  if (dep) {\n    if (!!(process.env.NODE_ENV !== \"production\")) {\n      triggerEffects(dep, {\n        target: ref2,\n        type: \"set\",\n        key: \"value\",\n        newValue: newVal\n      });\n    } else {\n      triggerEffects(dep);\n    }\n  }\n}\nfunction isRef(r) {\n  return !!(r && r.__v_isRef === true);\n}\nfunction ref(value) {\n  return createRef(value, false);\n}\nfunction shallowRef(value) {\n  return createRef(value, true);\n}\nfunction createRef(rawValue, shallow) {\n  if (isRef(rawValue)) {\n    return rawValue;\n  }\n  return new RefImpl(rawValue, shallow);\n}\nclass RefImpl {\n  constructor(value, __v_isShallow) {\n    this.__v_isShallow = __v_isShallow;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this._rawValue = __v_isShallow ? value : toRaw(value);\n    this._value = __v_isShallow ? value : toReactive(value);\n  }\n  get value() {\n    trackRefValue(this);\n    return this._value;\n  }\n  set value(newVal) {\n    const useDirectValue = this.__v_isShallow || isShallow(newVal) || isReadonly(newVal);\n    newVal = useDirectValue ? newVal : toRaw(newVal);\n    if (hasChanged(newVal, this._rawValue)) {\n      this._rawValue = newVal;\n      this._value = useDirectValue ? newVal : toReactive(newVal);\n      triggerRefValue(this, newVal);\n    }\n  }\n}\nfunction triggerRef(ref2) {\n  triggerRefValue(ref2, !!(process.env.NODE_ENV !== \"production\") ? ref2.value : void 0);\n}\nfunction unref(ref2) {\n  return isRef(ref2) ? ref2.value : ref2;\n}\nfunction toValue(source) {\n  return isFunction(source) ? source() : unref(source);\n}\nconst shallowUnwrapHandlers = {\n  get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\n  set: (target, key, value, receiver) => {\n    const oldValue = target[key];\n    if (isRef(oldValue) && !isRef(value)) {\n      oldValue.value = value;\n      return true;\n    } else {\n      return Reflect.set(target, key, value, receiver);\n    }\n  }\n};\nfunction proxyRefs(objectWithRefs) {\n  return isReactive(objectWithRefs) ? objectWithRefs : new Proxy(objectWithRefs, shallowUnwrapHandlers);\n}\nclass CustomRefImpl {\n  constructor(factory) {\n    this.dep = void 0;\n    this.__v_isRef = true;\n    const { get, set } = factory(\n      () => trackRefValue(this),\n      () => triggerRefValue(this)\n    );\n    this._get = get;\n    this._set = set;\n  }\n  get value() {\n    return this._get();\n  }\n  set value(newVal) {\n    this._set(newVal);\n  }\n}\nfunction customRef(factory) {\n  return new CustomRefImpl(factory);\n}\nfunction toRefs(object) {\n  if (!!(process.env.NODE_ENV !== \"production\") && !isProxy(object)) {\n    console.warn(`toRefs() expects a reactive object but received a plain one.`);\n  }\n  const ret = isArray(object) ? new Array(object.length) : {};\n  for (const key in object) {\n    ret[key] = propertyToRef(object, key);\n  }\n  return ret;\n}\nclass ObjectRefImpl {\n  constructor(_object, _key, _defaultValue) {\n    this._object = _object;\n    this._key = _key;\n    this._defaultValue = _defaultValue;\n    this.__v_isRef = true;\n  }\n  get value() {\n    const val = this._object[this._key];\n    return val === void 0 ? this._defaultValue : val;\n  }\n  set value(newVal) {\n    this._object[this._key] = newVal;\n  }\n  get dep() {\n    return getDepFromReactive(toRaw(this._object), this._key);\n  }\n}\nclass GetterRefImpl {\n  constructor(_getter) {\n    this._getter = _getter;\n    this.__v_isRef = true;\n    this.__v_isReadonly = true;\n  }\n  get value() {\n    return this._getter();\n  }\n}\nfunction toRef(source, key, defaultValue) {\n  if (isRef(source)) {\n    return source;\n  } else if (isFunction(source)) {\n    return new GetterRefImpl(source);\n  } else if (isObject(source) && arguments.length > 1) {\n    return propertyToRef(source, key, defaultValue);\n  } else {\n    return ref(source);\n  }\n}\nfunction propertyToRef(source, key, defaultValue) {\n  const val = source[key];\n  return isRef(val) ? val : new ObjectRefImpl(source, key, defaultValue);\n}\n\nclass ComputedRefImpl {\n  constructor(getter, _setter, isReadonly, isSSR) {\n    this._setter = _setter;\n    this.dep = void 0;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = false;\n    this._dirty = true;\n    this.effect = new ReactiveEffect(getter, () => {\n      if (!this._dirty) {\n        this._dirty = true;\n        triggerRefValue(this);\n      }\n    });\n    this.effect.computed = this;\n    this.effect.active = this._cacheable = !isSSR;\n    this[\"__v_isReadonly\"] = isReadonly;\n  }\n  get value() {\n    const self = toRaw(this);\n    trackRefValue(self);\n    if (self._dirty || !self._cacheable) {\n      self._dirty = false;\n      self._value = self.effect.run();\n    }\n    return self._value;\n  }\n  set value(newValue) {\n    this._setter(newValue);\n  }\n}\nfunction computed(getterOrOptions, debugOptions, isSSR = false) {\n  let getter;\n  let setter;\n  const onlyGetter = isFunction(getterOrOptions);\n  if (onlyGetter) {\n    getter = getterOrOptions;\n    setter = !!(process.env.NODE_ENV !== \"production\") ? () => {\n      console.warn(\"Write operation failed: computed value is readonly\");\n    } : NOOP;\n  } else {\n    getter = getterOrOptions.get;\n    setter = getterOrOptions.set;\n  }\n  const cRef = new ComputedRefImpl(getter, setter, onlyGetter || !setter, isSSR);\n  if (!!(process.env.NODE_ENV !== \"production\") && debugOptions && !isSSR) {\n    cRef.effect.onTrack = debugOptions.onTrack;\n    cRef.effect.onTrigger = debugOptions.onTrigger;\n  }\n  return cRef;\n}\n\nconst tick = /* @__PURE__ */ Promise.resolve();\nconst queue = [];\nlet queued = false;\nconst scheduler = (fn) => {\n  queue.push(fn);\n  if (!queued) {\n    queued = true;\n    tick.then(flush);\n  }\n};\nconst flush = () => {\n  for (let i = 0; i < queue.length; i++) {\n    queue[i]();\n  }\n  queue.length = 0;\n  queued = false;\n};\nclass DeferredComputedRefImpl {\n  constructor(getter) {\n    this.dep = void 0;\n    this._dirty = true;\n    this.__v_isRef = true;\n    this[\"__v_isReadonly\"] = true;\n    let compareTarget;\n    let hasCompareTarget = false;\n    let scheduled = false;\n    this.effect = new ReactiveEffect(getter, (computedTrigger) => {\n      if (this.dep) {\n        if (computedTrigger) {\n          compareTarget = this._value;\n          hasCompareTarget = true;\n        } else if (!scheduled) {\n          const valueToCompare = hasCompareTarget ? compareTarget : this._value;\n          scheduled = true;\n          hasCompareTarget = false;\n          scheduler(() => {\n            if (this.effect.active && this._get() !== valueToCompare) {\n              triggerRefValue(this);\n            }\n            scheduled = false;\n          });\n        }\n        for (const e of this.dep) {\n          if (e.computed instanceof DeferredComputedRefImpl) {\n            e.scheduler(\n              true\n              /* computedTrigger */\n            );\n          }\n        }\n      }\n      this._dirty = true;\n    });\n    this.effect.computed = this;\n  }\n  _get() {\n    if (this._dirty) {\n      this._dirty = false;\n      return this._value = this.effect.run();\n    }\n    return this._value;\n  }\n  get value() {\n    trackRefValue(this);\n    return toRaw(this)._get();\n  }\n}\nfunction deferredComputed(getter) {\n  return new DeferredComputedRefImpl(getter);\n}\n\nexport { EffectScope, ITERATE_KEY, ReactiveEffect, computed, customRef, deferredComputed, effect, effectScope, enableTracking, getCurrentScope, isProxy, isReactive, isReadonly, isRef, isShallow, markRaw, onScopeDispose, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, toValue, track, trigger, triggerRef, unref };\n","export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return (typeof navigator !== 'undefined' && typeof window !== 'undefined')\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\nexport const isProxyAvailable = typeof Proxy === 'function';\n"],"sourceRoot":""}